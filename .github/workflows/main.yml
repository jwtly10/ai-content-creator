name: Deploy app

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Create local directories
        run: |
          chmod +x create_directories.sh
          ./create_directories.sh

      - name: Install FFmpeg
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Auth with GCP
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Set Up Java
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/*.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run integration & unit tests
        run: |
          mvn clean verify -Ptest -Dspring.profiles.active=integration,test \
          -Delevenlabs.api.key=${{secrets.ELEVENLABS_API_KEY}} \
          -Dopenai.token=${{secrets.OPENAI_TOKEN}} \
          -Djwt.key=${{secrets.JWT_KEY}} \
          -Dtest.login.hashed.password=${{secrets.TEST_LOGIN_HASHED_PASSWORD}} \
          -Dtest.login.password=${{secrets.TEST_LOGIN_PASSWORD}} \
          -Dsupabase.apiKey=${{secrets.SUPABASE_API_KEY}} \
          -Dsmartproxy.apiKey=${{secrets.SMARTPROXY_API_KEY}}

      - name: Build prod java app
        run: |
          mvn clean package -Dspring.profiles.active=prod -Dmaven.test.skip

      - name: Upload java artifacts to remote
        uses: appleboy/scp-action@master
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          passphrase: ${{ secrets.PASSWORD }}
          password: ${{ secrets.PASSWORD }}
          source: "target/*.jar"
          target: "/opt/app"

      - name: Upload dockerfiles to remote
        uses: appleboy/scp-action@master
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          passphrase: ${{ secrets.PASSWORD }}
          password: ${{ secrets.PASSWORD }}
          source: "Dockerfile, docker-compose.yml"
          target: "/opt/app"

      - name: Run docker-compose
        uses: appleboy/ssh-action@v1.0.0
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          passphrase: ${{ secrets.PASSWORD }}
          script: |
            cd /opt/app &&
            elevenlabs.api.key=${{secrets.ELEVENLABS_API_KEY}} \
            openai.token=${{secrets.OPENAI_TOKEN}} \
            jwt.key=${{secrets.JWT_KEY}} \
            test.login.hashed.password=${{secrets.TEST_LOGIN_HASHED_PASSWORD}} \
            test.login.password=${{secrets.TEST_LOGIN_PASSWORD}} \
            supabase.apiKey=${{secrets.SUPABASE_API_KEY}} \
            spring.datasource.username=${{secrets.SPRING_DATASOURCE_USERNAME}} \
            spring.datasource.password=${{secrets.SPRING_DATASOURCE_PASSWORD}} \
            smartproxy.apiKey=${{secrets.SMARTPROXY_API_KEY}} \
            docker-compose up -d --build